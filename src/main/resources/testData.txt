[Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:32:12 00:00:00 A 오케이 저희 두 번째 회의를 시작해보죠. 바로 녹음하겠습니다. 제가 먼저 한마디 하자면은 일단 그래서 작업 분배를 저랑 병현이랑 나랑 병현이랑 AI 코어 서비스를 만들려고 했다가 그러니까 대충 보니까 나 혼자서도 충분히 만들 수 있을 것 같아. 그래서 그거를 나 혼자 왔고 그러면 이제 우리가 필요한 게 지금 당장 해야 될 게 일단 앱이랑 서버 부분에서 앱에서 음성 파일을 서버로 넘겨주면 서버는 거기서 알아서 모듈 ST STT 모듈 잘 써서 텍스트로 변환해서 노 SQL DB에 저장하는 거 그 기능이 필요할 것 같다. 그러면 이제 나는 내가 말했던 기능 만들어서 그걸 임베딩이라는 과정이 있어 그걸 하면은 어떤 문장들을 벡터라는 걸로 바꾼다고 했는데 그걸 통해서 그럼 이제 거기서 이제 벡터 DB가 필요한 것 같고 이제 그거를 다시 서치해서 그 결과를 추적해 내는 건데 그러니까 이게 완성품 단계는 아닌데 이제 이어서 내가 한 부분을 한번 대략적으로 보여줘 봐 볼게. \n15:33:20 00:01:06 B 우리 워드 임베딩 예시 코드 있지 않나 자연어 처리 해서 그 DB가 따로 필요했나요? 걔네는 \n15:33:28 00:01:16 C 좀 다른 DB 그리고 관계형 DB 비관계형 DB 그리고 배터 d 역에 세 동력 \n15:33:38 00:01:31 A 이게 사실 지금 당장 그러니까 진짜 근데 이제 코어 서비스가 어떻게 운영되는지 그냥 간단하게만 말하면은 진짜 별거 없더라고요. 솔직하게 말해서 나 좀 해봤는데 어디서 찾아야 되지? \n15:33:53 00:01:53 B 랭체인 모델 뭘로 했어? 우리는'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:33:38 00:01:31 A 이게 사실 지금 당장 그러니까 진짜 근데 이제 코어 서비스가 어떻게 운영되는지 그냥 간단하게만 말하면은 진짜 별거 없더라고요. 솔직하게 말해서 나 좀 해봤는데 어디서 찾아야 되지? \n15:33:53 00:01:53 B 랭체인 모델 뭘로 했어? 우리는 \n15:34:00 00:01:57 A 모델은 그냥 오픈 API gpt4 그거 API 불러서 했는데 일단 요금도 확실히 많이 안 들어 요금 많이 안 들고 어디까지 했냐면 미안해. 내가 이거 미리 준비는 안 해놨는데 잠깐만 찾아봐야 될 것 같아요. 그러니까 지금 그러니까 살짝 그런 게 있더라고요. 그러니까 어떤 느낌이냐면은 그러니까 예를 들어서 여기에 PDF를 첨부한다든가 아니면은 HTTP 문서를 첨부한다든가 아니면 경로 내에 있는 어떤 그냥 텍스트 파일을 첨부한다든가 그런 거 해줄 수 있는 또 모듈 같은 게 다 있더라고 그냥 인포트해서 쓰기만 하면 되더라고 그래서 그거를 인풋 해가지고 예를 들어서 지금 당장 이미 코드 다 있거든 거기에 그냥 PDF를 넣어주잖아. 그러면은 지금 따로 별도의 파인 튜닝을 전혀 하지 않고도 그냥 PDF 파일만 넣어주면은 그 PDF 파일 내용에 기반해서 GPT가 API 호출한 걸로 질문을 넣어주면은 그 넣어준 PDF에 관한 답변을 지금 다 해줘. 그게 이미 됐어 너무 그러니까 해보니까 별게 없더라고요. 그래서 이거를 이제 스프링 쪽으로 옮기는 과정만 좀 해주면은 이거는 이제 지금 이게 1주 동안 대략한 내용이고 2주 좀 더 쓰면은 무조건 가능할 것 같다. 이게 저의 중간 보고 좀 잠깐만 찾아서 보여줄게요. \n15:35:18 00:03:16 C 혹시 이제 오를 보면은 어떻게 커마다 코드 나이 비슷비슷한 부분도 \n15:35:20 00:03:32 D 이렇게 괜찮아 \n15:35:24 00:03:34 A 여기다 여기다 이거 코드거든요. 정말 좀 그런가 안 보일 수도 있는데 \n15:35:26 00:03:38 D 여기 보면요.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:35:29 00:03:43 A 잠깐만 이거 밝기를 좀 밝혀야겠다. 여기서 그냥 랭체인 라이브러리 설치해 설치한 거야. 그다음에 여기 이제 내 오픈 API 그거 등록해 놓으면 어떤 키 같은 걸 받아 그냥 설정해 두고 또 필요한 라이브러리 설치하고 이거네. 여기서 이게 또 이제 내가 말한 그냥 어떤 정보에 관해서 대답을 해줄 건지 이거는 이제 그래서 PDF를 불러오는 모듈을 쓴 건데 그냥 그거 그냥 인포트 해주고 이런 식으로 그냥 함수 써서 PDF 링크 넣어주면 돼. 여기서 그래서 넣어준 링크가 한국에 출산율 어쩌고저쩌고 관련한 그냥 논문 작은 논문 같은 건데 그래서 그거를 이제 나름의 뭐라 해야 될까 그냥 나름의 전 처리를 그냥 거쳐 별거 없어 그냥 그냥 함수만 그냥 그대로 써서 인포트만 해서 그냥 함수만 써주면 되거든 함수만 다 써주고 이거 다 그냥 전 처리하는 과정이고 그래서 어떤 모델을 통해서 대답을 해줄 건지 그냥 이런 거 그냥 그냥 설정만 해주고 그래서 그냥 질문 그냥 이런 식으로 코드 넣어주면 되거든. 그래서 저출산을 극복한 나라들은 어디가 있어 하면은 이게 따로 사전 학습이 된 내용은 아니고 그냥 PDF 내용 기반해서 그냥 다 내가 그냥 대답을 해줘. 물론 PDF 띄워놓고 일일이 보여주는 과정이 있으면 좀 더 신빙성이 있긴 할 텐데 그건 살짝 시간이 많이 들어갈 것 같으니까 그거는 여기서 그냥 스킵하고 그래서 아무튼 그냥 이런 식으로만 해서 하면은 끝난다. 그래서 굳이 이걸 나중에 코드를 바꾸면 질문을 여기 앱에서 해주면 그걸 서버로 보내서 그거를 텍스트로 변환해서 그 받은 텍스트 인자를 그냥 여기다 넣어주고 이거를 실행시키면 얘가 대답을 해준다. 그 뭐야 여기는 이제 PDF 로더를 써서 PDF를 넣어준 건데 그게 아니라 분명히 그런 거나 아니면 그런 벡터 파일들을 다 이렇게 이미 그거 선 사례를 내가 봤으니까 그냥 그거대로 해주면은 음성도 텍스트로 바꾸고 전 처리해서 DB에 넣고 그냥 얘가 찾아주고 그런 거 하면은 될 것 같아.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:37:38 00:05:57 E 그럼 이 DB에 만약에 3주 치의 데이터를 전부 다 몽땅 집어넣고 그게 처리할 수 있는 그게 돼. 여기서 그만큼의 양이 하루에 1~2시간 대화에 녹음이 있다고 치고 그걸 3주간 했을 때 그 내용 그 양을 거기다 다 집어넣고 거기서 질문에 대한 답을 도출해낼 수가 \n15:37:58 00:06:16 A 있는 것 같아요. 왜냐하면 왜냐하면 일단 당장에 이미 쿠링 서비스도 한 걸 눈으로 봤기 때문에 그 쿠링도 PDF 양이 꽤 꽤 어마어마한 걸로 알거든. 그래가지고 사실 그냥 이런 식으로 이제 음성을 텍스트로 바꿔주고 그래서 그 텍스트마다 나름대로 실시간으로 텍스트 업로드 되는 대로 그거를 다시 여기다가 이런 식으로 넣어주고만 하면은 되지 않을까 그렇게 생각보다 그렇게 복잡할 것 같지는 않다. \n15:38:26 00:06:44 B 근데 이게 그러면 PDF 로더랑 GPT 3.5만 있어도 꽤 되는 거 아니야 지금 이건 랭 체인이 여기 지금 적용이 된 건가 \n15:38:29 00:06:53 A 그거는 맨 위에 못 했어. \n15:38:32 00:06:57 B 얘 용도가 뭐야? 나 아직도 헷갈려 \n15:38:34 00:06:59 A 그러니까 찾아봤는데 말해 봐 그러니까 랭체인이 그냥 그러니까 뭔가 뭔가 잡단 이것저것 다 섞어놓은 거라던데 그냥 이런저런 필요한 것들을 그냥 다 섞어놓은 거래 랭체인이 중구난방에 뭐 중구난방 하 \n15:38:52 00:07:12 B 그러니까 내가 찾아봤을 때는 사전 모델 된 거기다가 체인 적용해가지고 좀 연관성 있는 거 끌고 온다고 나는 들어 \n15:38:54 00:07:19 A 대충 그런 느낌인 것 같은데 \n15:39:01 00:07:21 B 근데 그러면은 만약에 우리가 대화 기반으로 한다 하면은 우리가 랭체인을 도입한 게 데이터가 적어서였잖아. \n15:39:03 00:07:29 E 그럼 여기 환습하지 않아도 되는 \n15:39:07 00:07:31 A 데이터가 적어서 아니 그건 전혀 상관없어 아니야'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:39:01 00:07:21 B 근데 그러면은 만약에 우리가 대화 기반으로 한다 하면은 우리가 랭체인을 도입한 게 데이터가 적어서였잖아. \n15:39:03 00:07:29 E 그럼 여기 환습하지 않아도 되는 \n15:39:07 00:07:31 A 데이터가 적어서 아니 그건 전혀 상관없어 아니야 \n15:39:11 00:07:34 E 학습량이 그러니까 우리가 따로 학습을 커스텀 파이팅 하지 않고 그냥 \n15:39:19 00:07:38 A 파인 기능을 필요가 전혀 없어 이미 어느 정도 자체적으로 학습한 모델을 갖다가 쓰는 거기 때문에 될 것 같다. \n15:39:22 00:07:50 C 좀 열고 있으면 땅이 더 \n15:39:27 00:07:51 A 레그를 쓰기만 하면은 그냥 너 중에 하면 무조건 된다. 근데 여기선 달라질 건 여기는 PDF 로더를 썼지만 그게 아니라 그 텍스트 파일을 인베딩해 주고 인베딩한 걸 벡터에 넣어서 벡터 DB에 저장하고 그래서 여기서 다시 벡터 DB를 통해서 서치하는 거 그런 거를 해줘서 결과를 도출해내주는 게 내부 로직이 될 것 같다. 내부 구현 과정이 작동 방식이 될 것 같다. \n15:39:52 00:08:20 B 그러면 이제 벡터 DB 용도가 임베딩 벡터 저장 \n15:39:55 00:08:23 A 그거를 쓰는 것 같아 써야 되는 것 같고 \n15:39:56 00:08:26 C 단어를 이 \n15:39:59 00:08:27 A 우리 유산도 있잖아. 맞아 유사도 그거 \n15:40:02 00:08:31 C 그걸로 해서 이제 가까운 거에서 관련된 것들을 찾아서 \n15:40:08 00:08:35 B 근데 우리 했을 때 그냥 그 단어를 바로 임베딩으로 바꿔서 했던 거 아니야 그건 오래 걸리나 \n15:40:12 00:08:40 C 임베딩을 하는 거 그거는 그렇게 안 \n15:40:18 00:08:49 B 그러면 텍스트랑 벡터로 같이 따로 저장한다고 벡터 DB랑 노sql로 \n15:40:19 00:08:56 C 그래야 될 것 같은데'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:40:12 00:08:40 C 임베딩을 하는 거 그거는 그렇게 안 \n15:40:18 00:08:49 B 그러면 텍스트랑 벡터로 같이 따로 저장한다고 벡터 DB랑 노sql로 \n15:40:19 00:08:56 C 그래야 될 것 같은데 \n15:40:25 00:08:57 A 일단 음성 파일에 대한 텍스트를 어딘가는 저장을 해놔야 되니까 여기도 약간 스크립 \n15:40:31 00:09:11 C 제공해야 될 수도 있고 \n15:40:33 00:09:13 B 어쨌든 나중에 또 써야 되니까 \n15:40:38 00:09:18 C 옆에 있는 거 한번 했으면 나도 경구 형이 한 거 그냥 똑같이 했었을까? \n15:40:41 00:09:23 A 그게 또 겹치다 보니까 \n15:40:47 00:09:30 B 나 레체인 좀 편하고 알아서 썼었어. 다음 주부터 할게. \n15:40:48 00:09:35 C 근데 은진이 \n15:40:51 00:09:37 A 랭킹을 왜 했어도 로그인 구현하기로 했잖아 \n15:41:01 00:09:40 B 아니 근데 그건 맞는데 난 그게 헷갈려가지고 냉체인이 필요한 건지 그게 궁금 그러니까 랭체인 공부한 것도 사실 별로 안 봤어. 유튜브로만 여쭤봤어. \n15:41:06 00:09:51 A 그래 너 2주 내에 그럼 무조건 해야 돼 2주 내에 무조건 해내야 돼 네가 맡은 부분은 \n15:41:08 00:09:57 B 3주 아니에요 지금 \n15:41:12 00:09:58 A 맞아 지금 지금 1주 지났지 이제 2주 남았지 \n15:41:13 00:10:02 B 할 수 있으면 부탁해요. \n15:41:23 00:10:04 E 나는 이제 바르는 아키텍처 찾아보고 일단은 피그마에 좀 집중을 했거든. 와볼래요? 백업 비구만 내가 다시 올려줄게. \n15:41:30 00:10:18 A 피그마 UI UX 했어 \n15:41:31 00:10:20 E 좀 맞았을 \n15:41:35 00:10:21 B 근데 백업으로 가면은 그거 컴포넌트 안 되는데 돼.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:41:23 00:10:04 E 나는 이제 바르는 아키텍처 찾아보고 일단은 피그마에 좀 집중을 했거든. 와볼래요? 백업 비구만 내가 다시 올려줄게. \n15:41:30 00:10:18 A 피그마 UI UX 했어 \n15:41:31 00:10:20 E 좀 맞았을 \n15:41:35 00:10:21 B 근데 백업으로 가면은 그거 컴포넌트 안 되는데 돼. \n15:41:44 00:10:25 E 그냥 막 지웠어. 그냥 그래 그냥 이렇게 이전 일단 로고가 좀 바뀌어서 여기에 보면은 로그인 여기를 내가 몇 개를 찾아봤거든. \n15:41:51 00:10:39 A 죄송한데 어디로 가야 된다고요 \n15:41:52 00:10:41 B 백업 2 \n15:41:54 00:10:43 A 잠깐만 이거 어디야 \n15:41:58 00:10:46 E 내가 막 누워 있거든 어디야 \n15:42:01 00:10:49 B 이 나뭇잎 이거 내가 저번에 가져왔던 그 나뭇잎이잖아요. \n15:42:09 00:10:52 E 그래서 관련된 거를 그러니까 이거를 내가 이걸 왜 고려하냐면은 여기 GPT랑 검색할 때 이게 뭔가 좀 그냥 내 개인적으로 보는 건지 모르겠지만 좀 헛딱지 같다고 해야 될까 \n15:42:18 00:11:08 A 뭐 뭐 \n15:42:28 00:11:09 E 리플은 아이콘이 조그매지니까 좀 웃겨서 그래서 그냥 이거는 그냥 해도 되고 안 해도 되고인데 그 아이콘에 대한 조금 그때도 한창 논의가 있었지만 한번 만들어봤고 그다음에 내가 로직을 다글로랑 클로바노트를 살피면서 최대한 어설픈 냄새가 안 나게끔 최대한 지웠거든. 근데 하다 보니까 또 너무 너무 심플한 것 같기도 한 느낌이 들어서 일단 이런 느낌으로 버튼도 너무 많은 거는 어차피 내가 혼자 다 감당해야 되기 때문에 캘린더 기능을 그냥 메인으로 빼고 말대로 해당 날짜에 뭐가 있으면은 이런 식으로 녹색으로 원을 한다든가 이런 식으로 \n15:43:10 00:12:02 A 그리고 그 하단에 녹음 파일도'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:43:10 00:12:02 A 그리고 그 하단에 녹음 파일도 \n15:43:19 00:12:04 E 최근에 녹음 해놓고 그다음에 우리 기능이 마이크를 눌렀을 때 음성을 업로드하든가 실시간으로 녹음하고 녹음이 종료되면 곧바로 다글로랑 클로바랑 비슷한 서비스 그렇게 했을 때 여기서 이렇게 녹음을 진행하고 한다고 하면은 아니면 업로드 \n15:43:30 00:12:21 A 여기서 자체적으로 녹음도 되는 거야. \n15:43:38 00:12:24 E 어차피 어차피 하는 거니까 뭐 녹음이야 그때 해봤으니까 이거는 할 수 있고 그다음에 GPT 같은 느낌 검색을 했을 때 GPT 같은 느낌 주기 위해서 이거 최근 데이트라는 이런 식으로 우리 그리고 방을 여러 개 만들 수 있나 검색방을 GPT랑 최대한 비슷한 느낌으로 그러면 \n15:43:56 00:12:48 C 한 사용자 내에서도 \n15:44:05 00:12:49 A 아니 근데 검색방을 굳이 여러 개 만들 필요가 왜 있어 필요가 없나 그러면 나는 필요 없을 것 같은데 왜 왜 왜 필요해 \n15:44:15 00:12:59 B 검색어 기록이 남아 있으면 좋은 거 아니야 PT \n15:44:18 00:13:09 C 간혹 그런 느낌인가 \n15:44:19 00:13:11 E 이거 뭐 학습된다며 그러니까 만약에 그거를 만약에 어필하고 싶으면 방을 만들 수도 있는데 아니면 그냥 우리의 녹음 좀 핵심 취지를 좀 컴퓨터하게 가져가려고 하면은 그냥 뭐 그거 빼도 되고 어차피 핵심 로직은 그거니까 인성은 서비스를 하고 검색을 하고 하는 건데 방을 만들어도 되고 안 만들어도 되고 이거는 그럼 뺄까 말까 검색 방을 그건 나중에 하는 거고 나중에 시간 남으면 하고 아니면 그냥 일단 검색 이런 느낌으로만 일단은 \n15:45:02 00:13:49 A 그리고 내 생각에는 이거 캘린더랑 녹음 그러니까 캘린더를 누르면 그 밑에 이렇게 녹음 파일들이 뜨잖아 이걸 한 화면에 담는 게 아니라 달력을 누르면 새 화면으로 넘어가야 될 것 같거든요.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:45:02 00:13:49 A 그리고 내 생각에는 이거 캘린더랑 녹음 그러니까 캘린더를 누르면 그 밑에 이렇게 녹음 파일들이 뜨잖아 이걸 한 화면에 담는 게 아니라 달력을 누르면 새 화면으로 넘어가야 될 것 같거든요. \n15:45:14 00:14:03 E 그게 이거를 만약 녹색 동그라미 있잖아 그러면 이 빨간 색깔 화살표 해서 위로 가는 거 근데 근데 이게 지금 내가 UI를 잘못 만져서 이게 원래 \n15:45:25 00:14:14 A 나는 이게 더 좋을 것 같은 게 왜냐하면은 이제 녹음 파일에 대한 텍스트 스크립트도 보여주면 좋을 것 같다고 생각 \n15:45:28 00:14:20 E 클릭하면 한 번 더 텍스트로 보여주고 \n15:45:30 00:14:24 B 지금 플로우 그때 해놓은 거야. \n15:45:40 00:14:26 E 그냥 빨간 색깔 화살표로 따라가면 슬로우 같은 느낌이 들더라고요. 누르면 그 위로 올라가겠지 클릭하는 거 클릭하는 건 안 해놨어 클릭하는 건 움직이는 건 안 해놨어. 그냥 화면만 이런 식으로 움직이 이러면 될 것 같다. 그래서 이걸 해놨고 이제 이거를 너희들이 전반적으로 동의를 해 주면 이걸 기반으로 이제 이제는 난 어차피 나 혼자 하는 거니까 그냥 최신 라이브러리 다 반영해서 선언형 UI로 쓸 거고 어차피 내가 알지 다 할게 \n15:46:18 00:15:06 A 오케이 오케이 그러니까 내가 검색에는 그러니까 굳이 방이 여러 개 필요 없는 거지 그냥 하나의 화면만 있으면 될 것 같은 \n15:46:25 00:15:15 E 오케이 제 작업 여기입니다. 이게 끝입니다. 로고는 뭐 하지 말아 그냥 그대로 로고 로고 해도 되고 안 해도 되고 \n15:46:39 00:15:35 A 아니 뭐 투표해 볼까? 여기서 지금 나는 혹시 이 중에서 뭐가 낫다 아니면 다 안 낫다 기존 게 낫다 이런 거 \n15:46:43 00:15:46 B 나는 나뭇잎이 있는데 초록 배경에 나무가 하얀색인 게 나을 것 같은데'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:46:39 00:15:35 A 아니 뭐 투표해 볼까? 여기서 지금 나는 혹시 이 중에서 뭐가 낫다 아니면 다 안 낫다 기존 게 낫다 이런 거 \n15:46:43 00:15:46 B 나는 나뭇잎이 있는데 초록 배경에 나무가 하얀색인 게 나을 것 같은데 \n15:46:47 00:15:50 E 저 위에 나뭇잎이 한데 \n15:46:48 00:15:55 A 병원 너는 \n15:46:50 00:15:57 C 이 4개 중에서 \n15:46:53 00:15:58 A 굳이 고른다면 \n15:46:55 00:16:03 C 그나마 근데 두 번째가 나와 버리거나 \n15:46:58 00:16:05 A 두 번째 너는 정도 \n15:47:02 00:16:10 E 나도 첫 두 번째 한두 번째 첫 판 두 번째 \n15:47:04 00:16:13 A 뭐야 다 사라졌어 누가 없앴어 \n15:47:07 00:16:16 E 나 아니다. 나 아니야 \n15:47:09 00:16:18 A 나 지금 병현이 너 아니야 지 않았어 \n15:47:11 00:16:21 B 나뭇잎 하나 가져왔을 뿐인데 \n15:47:17 00:16:23 A 여기 나만 없어진 거 아니지 로그인 화면은 범인 누구야 \n15:47:23 00:16:28 B 나 나무 집 하나 가져가는데 이거 메인 컬러로 해놨구나. \n15:47:33 00:16:36 A 나는 그냥 나는 내 생각에 기본 기존 거 쓰거나 아니면 나는 첫 번째 거 나 너무 한 첫 번째 게 예쁜 것 같은데 \n15:47:36 00:16:47 E 나중에 그라데이션 좀 다시 해. \n15:47:40 00:16:56 A 그래서 여기 한번 그럼 글씨 앞으로 당겨볼까? 지금 여기에 지금 준영이 만지는 거 이런 느낌 이것도 괜찮은 것 같은데 \n15:47:48 00:17:07 B 이 뒤를 어떻게 보내지 \n15:47:51 00:17:09 A 글씨를 맨 앞으로 보내게 하면 될 것 같거든. \n15:47:54 00:17:14 E 뭐 있지 않아 세브'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:47:40 00:16:56 A 그래서 여기 한번 그럼 글씨 앞으로 당겨볼까? 지금 여기에 지금 준영이 만지는 거 이런 느낌 이것도 괜찮은 것 같은데 \n15:47:48 00:17:07 B 이 뒤를 어떻게 보내지 \n15:47:51 00:17:09 A 글씨를 맨 앞으로 보내게 하면 될 것 같거든. \n15:47:54 00:17:14 E 뭐 있지 않아 세브 \n15:47:55 00:17:17 B 그니까 글씨를 앞으로 보내야 되는 거 \n15:48:04 00:17:19 A 잠깐만 이쁜데 아까 된 거 같은데 아까 됐는데 되지 않았어 이거 괜찮은데 나 이거 괜찮은 것 같은데 \n15:48:06 00:17:28 B 어떻게 이걸로 희미하게 지금 이게 \n15:48:08 00:17:30 E 뒤가 그라덴션은 색깔이에요. \n15:48:17 00:17:32 A 근데 이거 괜찮지 않아 괜찮은데 이걸로 가자 그러면 이거 이거 하잖아 오케이 나이스 그럼 이걸로 가자. \n15:48:20 00:17:41 E 왜 아니야 괜찮아 다들 글씨 이거 검은 거야 아니야 검은 거 아니야 색 들어가 있는 살짝 \n15:48:31 00:17:51 B 색이 얘랑 살짝 다른데 난 근데 밑에 진한 게 좋아 밑에 찐하 \n15:48:34 00:17:58 A 그 디테일이 보인다고 그게 그거 같은데 지금 이거 이걸로 그냥 가면 되는 거 아니야 이걸로 가자 이거 \n15:48:48 00:18:18 C 이 색깔로 머리가 약간 검은색이 계속 신경 쓰이는 어떤 거 리프 검은 거 글자색 자이로 다 신경 쓰여서 일까 왠지 모르겠어요. \n15:49:01 00:18:41 A 이것도 괜찮아요 뭐든 괜찮습니다. 아무거나 가시죠 예 \n15:49:03 00:18:47 E 갑자기 대상이 아니라 \n15:49:06 00:18:50 C 나무나 이거 괜찮은 것 같아요. \n15:49:12 00:18:53 A 아니 그러니까 나는 진짜 솔직하게 뭐든 상관없다. 지금 여기서는'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:49:01 00:18:41 A 이것도 괜찮아요 뭐든 괜찮습니다. 아무거나 가시죠 예 \n15:49:03 00:18:47 E 갑자기 대상이 아니라 \n15:49:06 00:18:50 C 나무나 이거 괜찮은 것 같아요. \n15:49:12 00:18:53 A 아니 그러니까 나는 진짜 솔직하게 뭐든 상관없다. 지금 여기서는 \n15:49:17 00:19:00 B 이게 지금 컴포넌트로 묶여 있는 거야. 반영 안 되는데 \n15:49:19 00:19:05 E 일단 그러면 아이콘 이걸로 \n15:49:20 00:19:07 A 가자 가자 가자 우리도 스웨거 쓸까 자동 정보 그러면 스웨거 알아. \n15:49:35 00:19:21 E 그리고 맞아 이거 백엔드도 수술 이거 해줘야 돼. 근데 만약에 다음 주 중으로 만약에 완료한다고 치면 백이랑 또 결합 포개시 \n15:49:41 00:19:30 A 지금 당장은 너희 둘이 그러니까 정범이랑 병현이랑 둘이 좀 자주 얘기를 하면서 해야지 음성이랑 텍스트 저장하고 업로드하고 주고받고 그 API 만들고 해야 되니까. \n15:49:50 00:19:41 E 근데 그때 저기 백이 좀 돼 있었지 않았나 \n15:49:53 00:19:45 A 얼추 돼 있는데 다시 손 봐야 되긴 하든 \n15:50:00 00:19:49 C 그때 우리 했던 것처럼 아까 형이 말한 로직 있잖아. 그냥 거기 그대로 하면 되는 건가 그대로 하면 될 것 같은데 \n15:50:09 00:19:56 E 일단 첫 번째 단계가 음성 내가 파일 주면은 너가 그걸 받아가지고 ST 텍스트 만들고 텍스트 DB 저장 \n15:50:11 00:20:05 A 노이스 DB도 있고 \n15:50:17 00:20:06 C 그럼 음성 파일하고 테스트 데이터는 어떤 DB에 저장할 건지도 정해야 \n15:50:25 00:20:13 A 맞네. DB 4개 써야 된다. 하나는 s3 써가지고 음성 파일까지 저장을 할 거면 그거는 s3에 저장해야 될 것 같아 \n15:50:27 00:20:21 B 이동할 수 있어요.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:50:17 00:20:06 C 그럼 음성 파일하고 테스트 데이터는 어떤 DB에 저장할 건지도 정해야 \n15:50:25 00:20:13 A 맞네. DB 4개 써야 된다. 하나는 s3 써가지고 음성 파일까지 저장을 할 거면 그거는 s3에 저장해야 될 것 같아 \n15:50:27 00:20:21 B 이동할 수 있어요. \n15:50:29 00:20:23 C 용량이 커서 \n15:50:35 00:20:24 A 그러니까 사실 그러니까 나도 구체적으로는 잘 모르는데 보통 그렇게 하는 것 같아. \n15:50:39 00:20:33 E 음성 파일 하고 그러면은 텍스트만 DB에 저장 usq \n15:50:48 00:20:38 A 아니면은 굳이 노sql을 쓰지 말고 아니면 싹 다 그냥 x3에 넣을까 음성 파일이랑 텍스트랑 \n15:50:59 00:20:48 C 근데 솔직히 솔직히 이거 SQL 안 쓰고 그냥 텍스트 파일로 해가지고 저장해도 될 것 같기도 하고 이거 좀 생각해 봐야 될 것 같은데 \n15:51:07 00:20:58 A 오케이 그럼 그 부분을 거기에 대한 전반적인 아키텍처랑 그냥 거기에 완전 담당은 너야 너가 모든 걸 의사 결정해서 너가 결정하는 \n15:51:09 00:21:06 C 일단 해볼게. 오케이. \n15:51:14 00:21:08 A 근데 궁금하거나 당연히 논의해야 될 부분이 있으면 언제든지 얘기해 주고 \n15:51:17 00:21:13 C 일단 경보형이 짬이 그래도 있으니까 \n15:51:25 00:21:16 B 쓸 거 API 명세서 같은 거요. \n15:51:27 00:21:25 A 맞아 API 명세서 \n15:51:36 00:21:37 B 근데 로그인 구글이랑 이런 거 보니까 구글 이런 것도 다 넣어서 하던데 카카오만 있으면 근데 예쁘잖아 봐 \n15:51:38 00:21:45 A 하나 상관없어. 그래서 카카오만 있으면 돼 \n15:51:41 00:21:51 E 아니면 하고 싶으면 2개 다 \n15:51:43 00:21:54 B 구글이나 이런 거'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:51:36 00:21:37 B 근데 로그인 구글이랑 이런 거 보니까 구글 이런 것도 다 넣어서 하던데 카카오만 있으면 근데 예쁘잖아 봐 \n15:51:38 00:21:45 A 하나 상관없어. 그래서 카카오만 있으면 돼 \n15:51:41 00:21:51 E 아니면 하고 싶으면 2개 다 \n15:51:43 00:21:54 B 구글이나 이런 거 \n15:51:46 00:21:55 E 로그인 그런 거 아니야 로그인 회원 가입 \n15:51:54 00:21:59 B 얘가 여기 카카오만 있으면 보여지는 거죠. 이렇게 길게 길게 \n15:51:56 00:22:09 E 당연히 많이 하면 좋지'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:51:56 00:22:09 E 당연히 많이 하면 좋지 \n15:52:05 00:22:11 A 이거 봐봐 이거 이거 이거는 이거 맞다 틀리다의 문제이기 때문에 분명히 얘기해 줘야 돼. 마냥 서비스 여러 개 있으니까 그러니까 유저들이 이런저런 서비스로 다 로그인해 볼 수 있으니까 좋지 않느냐는 말이 전혀 말도 안 되는 소리인 게 일단 첫 번째는 만약에 예를 들어서 구글 그러니까 여러 가지 연동 서비스를 우리가 제공을 하는데 구글 로그인 연동 서비스가 있다 해보자 그러면 일단 구글 아이디 만드는 거 겁나 쉬워 그냥 한 사람이 막 20개 30개도 만들 수 있어. 물론 이게 서비스의 성격에 따라 달라지겠지만 그래서 그러니까 그러니까 사용자들이 다 절대 정상적인 루트로 서비스를 사용하지 않아 어떤 변태가 진짜 혼자 갑자기 구글 아이디 30개 40개 만들어서 이 서비스 싹 다 가입해버린 거야. 그럼 우리 입장에서는 살짝 난처해지지 않겠어요? 벌써 여기까지만 들어가도 그리고 예를 들어서 카카오 네이버 구글 이런 식으로 3개 정도 페이스북 4개 다 제공한다 해 봐. 그러면 이제 각각의 계정으로 로그인을 해. 근데 각각의 계정으로 로그인할 때마다 서로 다른 유저들끼리 되는 거야. 그러니까 통합 로그인이 구현이 된 게 아니라 서로서로 서로서로 4개로 어떤 소셜 서비스 연동으로 로그인했느냐에 따라 다 다른 계정이 돼버려요. 그러면 그 부분은 또 어떻게 해결할까요? 그래서 통합 로그인을 구현해 줘도 되는데 통합 로그인을 구현하지 않는다고 하면은 그런 불필요한 데이터들이 우수장창 쌓일 테고 물론 서비스 성격에 따라서 전혀 상관이 없는 얘기일 수도 아니면 좀 한번 심각하게 고려를 해봐야 할 사항이 될 수도 있는데 있는 거긴 한데 그러니까 내가 그러니까 그러니까 이거는 내 개인적인 생각이지만 만약에 여러 개의 소셜 서비스를 제공을 한다 그러면 그거를 하나로 통합해서 어디로 접근했든 간에 하나의 계정 정보로 접속이 가능한 그런 통합 서비스가 나는 반드시 필요하다라고 생각을 합니다.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:53:48 00:24:00 B 이런 느낌 카카오로 딱 하나 \n15:53:49 00:24:03 A 어 \n15:53:59 00:24:09 E 어쨌건 고려를 해보면은 당연히 생각이 넓어지는 거고 당연히 쓸 거리가 많아지는 거고 그만큼 더 많이 고민해 봤다. 깊게 고민해 봤다. 이렇게 되고 \n15:54:03 00:24:20 A 그러니까 내가 차이점을 두고 싶은 건 애초에 일단 여기서 네이버도 연동 로그인하는데 네이버도 연동했고 구글도 연동했고 카카오도 연동했다. 이거에 대한 가산점은 전혀 없어. 내가 봤을 때는 이런 거 전혀 없고 오히려 그러니까 내가 조금 더 차별점을 두고 싶은 거는 그러니까 차별점이 더 줄 거라고 내가 생각을 하는 부분은 토큰 관리를 위해서 레디스를 사용을 했다. 거기에 대한 왜냐 그 속도가 더 빠르니까 거기에 대한 근거들을 적당히 몇 개 갖추여서 제시해 주고 이런 내부 구조 거기가 오히려 더 가산점을 받으면 받을 수 있지 않을까 \n15:54:42 00:24:54 B 그러니까 이게 그냥 키만 넣으면 되는 것 같아서 그냥 확장하는 게 어려울 것 같지 않아서 그 얘기를 했던 거 그냥 안 해도 돼. \n15:54:49 00:25:02 E 그러면 일단 카카오로 로그인을 해보고 빨리 된다고 그러면은 통합 로그인까지 한번 고려를 해 보는 \n15:54:51 00:25:10 B 통합으면은 아까 \n15:54:54 00:25:11 E 다가 아니고 하나씩 하는 말씀이 \n15:54:59 00:25:14 A 그 부분은 그냥 너가 완전히 그냥 너가 담당해서 너 하고 싶은 대로 해. 그럼 거기에 대한 전반적인 의사결정은 준영 씨께서 하시는 건지 알겠습니다. \n15:55:09 00:25:29 C 우리 셀거 하면은 나 셀 거도 잘 모르겠는데 그러면 하면 \n15:55:17 00:25:32 A 스웨이거 내가 그냥 딱 말해 줄게 모르면 성훈이한테 찾아가서 알려달라. 어차피 둘이 같이 맨날 카공 하잖아. 맞긴 한데 \n15:55:18 00:25:40 C 성훈이 형도 일하잖아.'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:55:09 00:25:29 C 우리 셀거 하면은 나 셀 거도 잘 모르겠는데 그러면 하면 \n15:55:17 00:25:32 A 스웨이거 내가 그냥 딱 말해 줄게 모르면 성훈이한테 찾아가서 알려달라. 어차피 둘이 같이 맨날 카공 하잖아. 맞긴 한데 \n15:55:18 00:25:40 C 성훈이 형도 일하잖아. \n15:55:22 00:25:42 A 일한다고 근데 알잖아. 성원이 물어보면 다 해주는 거고 \n15:55:27 00:25:46 C 근데 또 미안해. 너무 물어보니 약간 올라도 알려져. \n15:55:29 00:25:50 A 그럼 그때만큼 계열화도 아니잖아. \n15:55:31 00:25:52 C 그러니까 이게 백엔드만 하는 거야. \n15:55:42 00:25:55 A 그러면 기대선 코스터랑 컴피그에 스웨이버 콤피그 있거든. 내 생각에 그냥 컴피그 복붓 해주고 API마다 코드가 있을 거야. 예를 들어서 그럼 API 그러니까 나도 자세히 그러니까 그냥 어노테이션 써가지고 뭐라 하더라. 아무튼 이 API가 어떤 API인지 설명하는 어노테이션 같은 거 있고 그냥 그건 진짜 그냥 그냥 쿠스토랑 그거 그거 봐. 거기 그냥 그거 그대로 그냥 부풋 하면 될 거야. 그냥 그냥 부풋해서 아니면 여기 API에 사용된 스웨거 관련 설명들 좀 해줘. 이런 거 하면 다 알려줄 테니까 이런 식으로 쓰면 되고 가 모르는 거 있으면 성훈이한테 성훈이 귀찮게 해. 아니 그러니까 성훈이 귀찮게 하기 싫으면 너 혼자서 어떻게든 해결해. 결론 \n15:56:27 00:26:44 C 어떻게든 해볼게요. 가 일주일 만에 해봐야지 일단'),
 Document(metadata={'_id': '66f7bafd53a5f3140d9d65f6', 'recordId': 'a09d1ec25c2b7b055449c12ee813864ab525bd9881f56ebb620615f2aa2d76ea', 'date': '2024-09-11'}, page_content='15:56:27 00:26:44 C 어떻게든 해볼게요. 가 일주일 만에 해봐야지 일단 \n15:56:36 00:26:50 A 아니 그러니까 2주에 우리의 일단 각각의 1차적인 목표는 일단 3주 지금 미니 프로젝트입니다. 소규모 프로젝트 3주 컷 나는 내 그 서비스 다 AI 서비스 구현하고 너는 이제 음성 받아서 텍스트 변환하는 거 저장하는 것까지 하고 준영이 로그인하고 동범이 안드로이드는 계속 계속해야 되니까 쭉 성훈이도 슬레이어 하루 만에 했을 거야. 아마 그냥 컴피그만 설정하고 하면 돼. 일단 보자. 편하게 생각해. 별거 없어 진짜 모르겠습니다. 그냥 쿠스트랑 기도 클래스에 스웨거 컴피그 있을 거야. 안 되면 그냥 갔다가 복부 복부하고 기사한테 물어봐. 이거 무슨 코드 설명 좀 해달라고 \n15:57:19 00:28:00 C 그러면은 이제 AR 그냥 \n15:57:23 00:28:03 A AI AI AI \n15:57:26 00:28:07 C 그럼 이제 이거 좀 써서 이제 교수님한테 2개 \n15:57:31 00:28:11 A 그거 잠깐만 맞아 맞아 언제까지였지 2주 차가 14일까지였나 \n15:57:33 00:28:16 C 2일인가 3일 남은 걸로 알고 있는 \n15:57:35 00:28:18 A 그러면 내가 오늘 또 보내줄게요. 오케이 그럼 여기까지 할까요? 더 얘기 나눌 거 없죠 오케이 그럼 저희 두 번째 볼프 회의 마치겠습니다.'),
 Document(metadata={'_id': '66f834ed061a1155a7d1fe9d', 'recordId': '4c34ffb0d8ccfeb47dda19ce7955cc6e11942cc8ca61560767879b55ccc9e310', 'date': '2024-04-02'}, page_content='13:57:35 00:00:03 A 여보세요 \n13:57:36 00:00:04 B 여보세요 \n13:57:37 00:00:05 A 어디야 \n13:57:39 00:00:06 B 400에 다시 1호 \n13:57:42 00:00:08 A 혹시 라벨 파이터 \n13:57:44 00:00:12 B 가져왔어 \n13:57:49 00:00:13 A 나이스 나이스 알았어 401 다시 몇 도라고 \n13:57:51 00:00:18 C 1호 그때 우리 어제 했던 데 \n13:57:53 00:00:21 A 혹시 누구랑 있어 \n13:57:55 00:00:23 C 혼자 있어 혼자 \n13:57:56 00:00:24 A 오케이 오케이 \n13:57:57 00:00:25 C 아이.')]